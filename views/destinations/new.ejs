<%- include('../partials/header') %>

<div class="container">
  <h1><%= typeof destination !== 'undefined' && destination ? 'Edit Destination' : 'Add Destination' %></h1>
  <form action="/itineraries/<%= itinerary._id %>/destinations<%= typeof destination !== 'undefined' && destination ? `/${destination._id}?_method=PUT` : '' %>" method="POST">
    <% if (typeof destination !== 'undefined' && destination) { %>
      <input type="hidden" name="_method" value="PUT">
    <% } %>
    <div class="mb-3">
      <label for="city" class="form-label">City</label>
      <input type="text" class="form-control" id="cityInput" name="city" value="<%= typeof destination !== 'undefined' && destination ? destination.city : '' %>" required>
    </div>
    <div class="mb-3">
      <label for="startDate" class="form-label">Start Date</label>
      <input type="date" class="form-control" id="startDate" name="startDate" value="<%= typeof destination !== 'undefined' && destination ? destination.startDate : '' %>">
    </div>
    <div class="mb-3">
      <label for="endDate" class="form-label">End Date</label>
      <input type="date" class="form-control" id="endDate" name="endDate" value="<%= typeof destination !== 'undefined' && destination ? destination.endDate : '' %>">
    </div>
    <button type="submit" class="btn btn-primary"><%= typeof destination !== 'undefined' && destination ? 'Update Destination' : 'Create Destination' %></button>
  </form>
  <% if (typeof destination !== 'undefined' && destination && destination._id) { %>
    <form action="/itineraries/<%= itinerary._id %>/destinations/<%= destination._id %>?_method=DELETE" method="POST">
      <input type="hidden" name="_method" value="DELETE">
      <button type="submit" class="btn btn-danger">Delete Destination</button>
    </form>
  <% } %>
</div>

<script src="https://maps.googleapis.com/maps/api/js?key=<%= process.env.GOOGLE_PLACES_API %>&libraries=places"></script>
<script>
function initializePlaceAutocomplete() {
  const cityInput = document.getElementById('cityInput');
  const autocomplete = new google.maps.places.Autocomplete(cityInput, {
    types: ['(cities)'],
  });

  autocomplete.addListener('place_changed', function() {
    const place = autocomplete.getPlace();
    if (!place.geometry || !place.geometry.location) {
      return;
    }

    const city = extractCityName(place);

    cityInput.value = city;
  });
}

function extractCityName(place) {
  const cityComponent = place.address_components.find(component =>
    component.types.includes('locality')
  );

  return cityComponent ? cityComponent.long_name : '';
}
  document.addEventListener('DOMContentLoaded', initializePlaceAutocomplete);
</script>

<%- include('../partials/footer') %>

